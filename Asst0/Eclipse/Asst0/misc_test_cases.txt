// Testing mergeSort
/*char * a[] = { "food", "calories", "fat", "sodium" };
header.titles = a;
format b[] = { STRING, INTEGER, INTEGER, DOUBLE };
header.types = b;
Rows = malloc(sizeof(Row) * 10);
char *** c = malloc(sizeof(char**) * 10);
char* c0[] = { "pizza", "201", "17", "-9.8" };
c[0] = c0;
char* c1[] = { "soup", "200", "12", "9.8" };
c[1] = c1;
char* c2[] = { "pie", "500", "25", "4.5" };
c[2] = c2;
char* c3[] = { "celery", "-10", "0", "-0.9" };
c[3] = c3;
char* c4[] = { "chicken", "10", "8", "0.9" };
c[4] = c4;
char* c5[] = { "ice cream", "", "4", "10.9" };
c[5] = c5;
char* c6[] = { "", "20", "18", "4.5" };
c[6] = c6;
char* c7[] = { "banana", "87", "55", "" };
c[7] = c7;
char* c8[] = { "kiwi", "91", "46", "108.9" };
c[8] = c8;
char* c9[] = { "lemon", "64", "-90", "" };
c[9] = c9;
for (int i = 0; i < 10; i++) {
    Rows[i].entries = c[i];
}

Row* tmp = mergeSort(Rows, 10, 0, STRING);
//Row* tmp = mergeSort(Rows, 10, 1, INTEGER);
//Row* tmp = mergeSort(Rows, 10, 2, INTEGER);
//Row* tmp = mergeSort(Rows, 10, 3, DOUBLE);
free(Rows);
Rows = tmp;
for (int j = 0; j < 10; j++) {
    printf("%s,%s,%s,%s\n", Rows[j].entries[0], Rows[j].entries[1], Rows[j].entries[2], Rows[j].entries[3]);
}
free(c);
free(Rows);*/

// Check for weird space
//printf("|%s|", trim("\"The Chronicles of Narnia: The Lion, the Witch and the Wardrobeï¿½\""));


